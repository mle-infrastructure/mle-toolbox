

class ExploitationStrategy(object):
    def __init__(self, exploitation_type):
        """ Exploitation Strategies for PBT (Jaderberg et al. 17). """
        self.exploitation_type = exploitation_type

    def t_test_selection(self):
        """ Multiply hyperparam independently by random factor of 0.8/1.2. """
        return

    def truncation_selection(self):
        """
        Rank all agents in population by episodic reward/performance. If
        current agent is in bottom 20% of population sample another agent
        uniformly from top 20% of population, and copy it (hyper & weights).
        """
        return

    def binary_tournament_selection(self):
        """
        Each member of population randomly selects another member and copies
        all its parameters (hyper & weights) if other memberâ€™s score is better.
        """
        return

    def select(self):
        return
